name: Version

on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string
        description: node / file / regex
      regex:
        type: string
        default: __NONE__
        description: |
          Should contain a match group with the version.
          Example: 'const Version = "(\K[^"]+)'
      file:
        type: string
        default: __NONE__
        description: |
          File to get the version from. Defaults : node -> package.json, file -> VERSION, regex -> VERSION
      prefix:
        type: string
        default: v
    outputs:
      version:
        value: ${{ jobs.get-version.outputs.version }}

jobs:
  get-version:
    name: Get version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ inputs.prefix }}${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from file
        id: get_version
        shell: bash
        env:
          TYPE: ${{ inputs.type }}
          FILE: ${{ inputs.file }}
          REGEX: ${{ inputs.regex }}
        run: |
          type=$TYPE
          file=$FILE
          regex=$REGEX

          if [ "$type" = "node" ]; then
            if [ "$file" = "__NONE__" ]; then
              file="package.json"
            fi
            if [ -f "$file" ]; then
              echo "Found '$file' file"
              if [ "${file:0:2}" != "./" ]; then
                file="./$file"
              fi
              VERSION=$(node -p "require('$file').version")
            else
              echo "Could not find '$file'"
              exit 1
            fi
          elif [ "$type" = "file" ]; then
            if [ "$file" = "__NONE__" ]; then
              file="VERSION"
            fi
            if [ -f "$file" ]; then
              echo "Found '$file' file"
              VERSION=$(cat "$file")
            else
              echo "Could not find '$file' file"
              exit 1
            fi
          elif [ "$type" = "regex" ]; then
            echo "Using regex: $regex"
            if [ "$file" = "__NONE__" ]; then
              file="VERSION"
            fi
            if [ -f "$file" ]; then
              echo "Found '$file' file"
              VERSION=$(grep -oP "$regex" "$file")
            else
              echo "Could not find '$file' file"
              exit 1
            fi
          else
            echo "Invalid type"
            exit 1
          fi

          if [ -z "$VERSION" ]; then
            echo "Could not find a version"
            exit 1
          fi

          echo "Found version: $VERSION"
          echo "version=$VERSION" >>$GITHUB_OUTPUT

      - name: Print version
        run: |
          echo "Version is ${{ inputs.prefix }}${{ steps.get_version.outputs.version }}"
